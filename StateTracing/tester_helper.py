# -*- coding: utf-8 -*-

import numpy as np

from torch import load as Tload
from torch import tensor
from dataloader import read_data,DataLoader,load_init
from cdkt import CDKT


if 'model' not in dir():
    model = CDKT()
    model.load_state_dict(Tload('model.pkl'))
#
inits = load_init()

data = """0 506123310064654031030450460312100605
    0 506123310064654031230450460312100605
    0 506123310064654031231450460312100605
    0 506123310064654031231456460312100605
    0 506123310064654031231456460312100645
    0 506123310564654031231456460312100645
    0 506123310564654231231456460312100645
    0 506123310564654231231456460312100605
    0 506123310564654231231456460312100645
    0 506123312564654231231456460312100645
    0 546123312564654231231456460312100645
    0 546123312564654231231456465312100645
    0 546123312564654231231456465312120645
    0 546123312564654231231456465312123645
    1 002163163050030425245001316542000000
    1 002163163054030425245001316542000000
    1 002163163054030425245001316542000006"""
#    1 002163163054030425245001316542030006
#    1 002163163054030425245001316542000006
#    1 002163163054031425245001316542000006
#    1 002163163054631425245001316542000006
#    1 002163163254631425245001316542000006
#    1 002163163254631425245601316542000006
#    1 002163163254631425245631316542000006
#    1 052163163254631425245631316542000006
#    1 452163163254631425245631316542000006
#    1 452163163254631425245631316542000016
#    1 452163163254631425245631316542000316
#    1 452163163254631425245631316542003316
#    1 452163163254631425245631316542000316
#    1 452163163254631425245631316542500316
#    1 452163163254631425245631316542520316
#    1 452163163254631425245631316542524316"""

data = [d.strip().split() for d in data.split('\n')]
states = [list(map(int,s)) for i,s in data]
states = tensor([states])

out  = model.predicts(states)
prds = np.argmax(out[0],axis=2).flatten()*np.array(inits[2])